#!/usr/bin/env groovy
@Library('main@release/2.23.0')
// ///////////////////////////////////////////
import library.Main.*
import hudson.EnvVars
import groovy.transform.Field
// ///////////////////////////////////////////
def job = new api.job()
def pipeline = new api.pipeline.sequential()
// ///////////////////////////////////////////
M_BuildTarget=["Init"]
M_BuildTargetPartner=["Init"]
M_BuildTargetOoredoo=["Init"]
M_BuildTargetStarhub=["Init"]
M_BuildTargetIfeelsmart=["Init"]
M_BuildTargetXl=["Init"]
M_BuildTargetCignal=["Init"]
M_BuildTargetTestauto=["Init"]
//////////////////
echo "strart env assignment"
env.M_Defaulttarget="wow"
env.M_Project="VoltStb"
env.M_RepositoryUrl="ssh://git@git.ifeelsmart.net:7999/VOLT/stb.git"
env.M_NotificationLvl=1
//M_NotificationLvl0->Only Notif when build is failing
//M_NotificationLvl1->Notif only when build is finished
//M_NotificationLvl2->Notif Start + Build finished
//M_NotificationLvl3->LVL2 + Warning
//M_NotificationLvl4->Jenkins Log Lvl

properties([
    parameters([
        booleanParam(defaultValue: true,   description: ""    , name: "wow"),
        booleanParam(defaultValue: false,  description: ""    , name: "partner"),
        booleanParam(defaultValue: true ,  description: ""    , name: "ooredoo"),
        booleanParam(defaultValue: true ,  description: ""    , name: "starhub"),
        booleanParam(defaultValue: false,  description: ""    , name: "ifeelsmart"),
        booleanParam(defaultValue: true,   description: ""    , name: "xl"),
        booleanParam(defaultValue: true,   description: ""    , name: "cignal"),
        booleanParam(defaultValue: false,  description: ""    , name: "TestAuto"),
        string(defaultValue: "test", description: ""      , name: "Scheme", trim: true),
        string(defaultValue: "volt-stb-dev", description: ""      , name: "SlackChannel", trim: true),
    ])
])

env.M_Scheme="${params.Scheme}"
env.M_IrcChannel="${params.SlackChannel}"

// wow
M_BuildTarget.push("${env.M_Defaulttarget}-stb")
M_BuildTarget.push("${env.M_Defaulttarget}-androidtv")

M_BuildTarget.remove("Init")
// partner
M_BuildTargetPartner.push("partner-stb")
M_BuildTargetPartner.push("partner-androidtv")
M_BuildTargetPartner.remove("Init")
// ooredoo
M_BuildTargetOoredoo.push("ooredoo-stb")
M_BuildTargetOoredoo.push("ooredoo-androidtv")
M_BuildTargetOoredoo.push("ooredoo-ios")
M_BuildTargetOoredoo.remove("Init")
// starhub
M_BuildTargetStarhub.push("starhub-stb")
M_BuildTargetStarhub.push("starhub-androidtv")
M_BuildTargetStarhub.remove("Init")
// ifeelsmart
M_BuildTargetIfeelsmart.push("ifeelsmart-stb")
M_BuildTargetIfeelsmart.push("ifeelsmart-androidtv")
M_BuildTargetIfeelsmart.remove("Init")
// xl
M_BuildTargetXl.push("xl-stb")
M_BuildTargetXl.push("xl-androidtv")
M_BuildTargetXl.remove("Init")
// cignal
M_BuildTargetCignal.push("cignal-stb")
M_BuildTargetCignal.push("cignal-androidtv")
M_BuildTargetCignal.remove("Init")
// trigger-e2e
M_BuildTargetTestauto.push("trigger-e2e")
M_BuildTargetTestauto.remove("Init")
echo "strart jobs "

job.start()
pipeline.workspace(M_BuildTarget,"SCM","start")
echo "stop  job"

if ( "${params.wow}" == 'true' ){
    pipeline.exec(M_BuildTarget,"${env.M_Scheme}","true")
    pipeline.exec(M_BuildTarget,"BuildAutotest","true")
}
if ( "${params.partner}" == 'true' ){
    pipeline.exec(M_BuildTargetPartner,"${env.M_Scheme}","true")
}
if ( "${params.ooredoo}" == 'true' ){
    pipeline.exec(M_BuildTargetOoredoo,"${env.M_Scheme}","true")
}
if ( "${params.starhub}" == 'true' ){
    pipeline.exec(M_BuildTargetStarhub,"${env.M_Scheme}","true")
}
if ( "${params.ifeelsmart}" == 'true' ){
    pipeline.exec(M_BuildTargetIfeelsmart,"${env.M_Scheme}","true")
}
if ( "${params.xl}" == 'true' ){
    pipeline.exec(M_BuildTargetXl,"${env.M_Scheme}","true")
}
if ( "${params.cignal}" == 'true' ){
    pipeline.exec(M_BuildTargetCignal,"${env.M_Scheme}","true")
}
if ( "${params.TestAuto}" == 'true' ){
    pipeline.exec(M_BuildTargetTestauto,"Autotest","true")
}

pipeline.workspace(M_BuildTarget,"End","end")


///////////////////////////////////////////////////////////////
// This File has been automatically generated by TDK Ifeelsmart
///////////////////////////////////////////////////////////////
